'use client';

import React, { useState } from 'react';
import styled from 'styled-components';

const CoursesContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
`;

const PageTitle = styled.h1`
  font-size: 2.5rem;
  margin-bottom: 2rem;
  color: var(--text-primary);
  text-align: center;
`;

const FiltersSection = styled.div`
  background: var(--bg-secondary);
  padding: 1.5rem;
  border-radius: 1rem;
  margin-bottom: 2rem;
`;

const FiltersTitle = styled.h3`
  margin-bottom: 1rem;
  color: var(--text-primary);
`;

const FilterButtons = styled.div`
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
`;

const FilterButton = styled.button<{ active: boolean }>`
  padding: 0.5rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  background: ${props => props.active ? 'var(--primary-color)' : 'var(--bg-primary)'};
  color: ${props => props.active ? 'white' : 'var(--text-primary)'};
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover {
    background: ${props => props.active ? 'var(--primary-hover)' : 'var(--bg-tertiary)'};
  }
`;

const CoursesGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
`;

const CourseCard = styled.div`
  background: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: 1rem;
  overflow: hidden;
  box-shadow: var(--shadow-sm);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-lg);
  }
`;

const CourseImage = styled.div`
  height: 200px;
  background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 3rem;
`;

const CourseContent = styled.div`
  padding: 1.5rem;
`;

const CourseTitle = styled.h3`
  font-size: 1.3rem;
  margin-bottom: 0.5rem;
  color: var(--text-primary);
`;

const CourseDescription = styled.p`
  color: var(--text-secondary);
  margin-bottom: 1rem;
  line-height: 1.5;
`;

const CourseMeta = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
`;

const CourseLevel = styled.span`
  background: var(--accent-color);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.8rem;
`;

const CourseDuration = styled.span`
  color: var(--text-muted);
  font-size: 0.9rem;
`;

const EnrollButton = styled.button`
  width: 100%;
  background: var(--primary-color);
  color: white;
  border: none;
  padding: 0.75rem;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: background 0.2s ease;
  
  &:hover {
    background: var(--primary-hover);
  }
`;

const courses = [
  {
    id: 1,
    title: 'JavaScript –û—Å–Ω–æ–≤—ã',
    description: '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã JavaScript —Å –Ω—É–ª—è. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ñ—É–Ω–∫—Ü–∏–∏, –æ–±—ä–µ–∫—Ç—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.',
    level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    duration: '8 –Ω–µ–¥–µ–ª—å',
    category: 'javascript',
    icon: '‚ö°'
  },
  {
    id: 2,
    title: 'React –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å React. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Ö—É–∫–∏, —Å–æ—Å—Ç–æ—è–Ω–∏–µ.',
    level: '–°—Ä–µ–¥–Ω–∏–π',
    duration: '10 –Ω–µ–¥–µ–ª—å',
    category: 'react',
    icon: '‚öõÔ∏è'
  },
  {
    id: 3,
    title: 'Node.js Backend',
    description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å–µ—Ä–≤–µ—Ä–Ω—É—é —á–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å Node.js –∏ Express.',
    level: '–°—Ä–µ–¥–Ω–∏–π',
    duration: '12 –Ω–µ–¥–µ–ª—å',
    category: 'nodejs',
    icon: 'üü¢'
  },
  {
    id: 4,
    title: 'Python –û—Å–Ω–æ–≤—ã',
    description: '–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ Python. –°–∏–Ω—Ç–∞–∫—Å–∏—Å, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–∏.',
    level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    duration: '6 –Ω–µ–¥–µ–ª—å',
    category: 'python',
    icon: 'üêç'
  },
  {
    id: 5,
    title: 'TypeScript',
    description: '–î–æ–±–∞–≤—å—Ç–µ —Ç–∏–ø–∏–∑–∞—Ü–∏—é –≤ JavaScript. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, —Ç–∏–ø—ã, –¥–∂–µ–Ω–µ—Ä–∏–∫–∏.',
    level: '–°—Ä–µ–¥–Ω–∏–π',
    duration: '8 –Ω–µ–¥–µ–ª—å',
    category: 'typescript',
    icon: 'üìò'
  },
  {
    id: 6,
    title: 'Vue.js',
    description: '–ò–∑—É—á–∏—Ç–µ Vue.js - –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π JavaScript —Ñ—Ä–µ–π–º–≤–æ—Ä–∫.',
    level: '–°—Ä–µ–¥–Ω–∏–π',
    duration: '9 –Ω–µ–¥–µ–ª—å',
    category: 'vue',
    icon: 'üíö'
  }
];

const categories = ['–í—Å–µ', 'javascript', 'react', 'nodejs', 'python', 'typescript', 'vue'];

export default function CoursesPage() {
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');

  const filteredCourses = selectedCategory === '–í—Å–µ' 
    ? courses 
    : courses.filter(course => course.category === selectedCategory);

  return (
    <CoursesContainer>
      <PageTitle>–ö—É—Ä—Å—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è</PageTitle>
      
      <FiltersSection>
        <FiltersTitle>–§–∏–ª—å—Ç—Ä—ã</FiltersTitle>
        <FilterButtons>
          {categories.map(category => (
            <FilterButton
              key={category}
              active={selectedCategory === category}
              onClick={() => setSelectedCategory(category)}
            >
              {category === '–í—Å–µ' ? '–í—Å–µ –∫—É—Ä—Å—ã' : category}
            </FilterButton>
          ))}
        </FilterButtons>
      </FiltersSection>
      
      <CoursesGrid>
        {filteredCourses.map(course => (
          <CourseCard key={course.id}>
            <CourseImage>
              {course.icon}
            </CourseImage>
            <CourseContent>
              <CourseTitle>{course.title}</CourseTitle>
              <CourseDescription>{course.description}</CourseDescription>
              <CourseMeta>
                <CourseLevel>{course.level}</CourseLevel>
                <CourseDuration>{course.duration}</CourseDuration>
              </CourseMeta>
              <EnrollButton>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å</EnrollButton>
            </CourseContent>
          </CourseCard>
        ))}
      </CoursesGrid>
    </CoursesContainer>
  );
} 